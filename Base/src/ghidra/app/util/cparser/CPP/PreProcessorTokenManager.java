/* Generated By:JavaCC: Do not edit this line. PreProcessorTokenManager.java */
package ghidra.app.util.cparser.CPP;
import ghidra.util.Msg;
import java.util.*;
import java.io.*;
import java.math.BigInteger;

/** Token Manager. */
public class PreProcessorTokenManager implements PreProcessorConstants
{
    static int parenNesting = 0;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjMoveStringLiteralDfa0_15()
{
   return jjMoveNfa_15(0, 0);
}
private int jjMoveNfa_15(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 15;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 162)
                        kind = 162;
                     jjCheckNAdd(6);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjAddStates(0, 1);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 161)
                        kind = 161;
                     jjCheckNAdd(3);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 160)
                        kind = 160;
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 36)
                  {
                     if (kind > 162)
                        kind = 162;
                     jjCheckNAdd(5);
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 160)
                     kind = 160;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0x100000200L & l) == 0L)
                     break;
                  kind = 161;
                  jjCheckNAdd(3);
                  break;
               case 4:
                  if (curChar != 36)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjCheckNAdd(5);
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if (curChar == 46 && kind > 162)
                     kind = 162;
                  break;
               case 8:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x280000000000L & l) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 11:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjCheckNAdd(12);
                  break;
               case 13:
                  if (curChar == 48)
                     jjCheckNAdd(14);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjCheckNAdd(14);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 162)
                     kind = 162;
                  jjCheckNAdd(5);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 15 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_24()
{
   return jjMoveNfa_24(0, 0);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_24(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffbffffffffL & l) != 0L)
                  {
                     if (kind > 186)
                        kind = 186;
                     jjCheckNAddTwoStates(1, 2);
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 185)
                        kind = 185;
                  }
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) == 0L)
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 3:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffefffffffL & l) != 0L)
                  {
                     if (kind > 186)
                        kind = 186;
                     jjCheckNAddTwoStates(1, 2);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 1:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 3:
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
               case 3:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 186)
                     kind = 186;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_9()
{
   return jjMoveNfa_9(0, 0);
}
private int jjMoveNfa_9(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffefffffdffL & l) != 0L)
                     jjCheckNAdd(1);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 142)
                        kind = 142;
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 141)
                        kind = 141;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 140)
                     kind = 140;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 141)
                     kind = 141;
                  break;
               case 3:
                  if (curChar == 10 && kind > 141)
                     kind = 141;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if ((0x100000200L & l) != 0L && kind > 142)
                     kind = 142;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if (kind > 140)
                     kind = 140;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(1);
                  break;
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 140)
                     kind = 140;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_6()
{
   return jjMoveNfa_6(0, 0);
}
private int jjMoveNfa_6(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 16;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xeffffffaffffd9ffL & l) != 0L)
                  {
                     if (kind > 131)
                        kind = 131;
                     jjCheckNAdd(4);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 133)
                        kind = 133;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 130)
                        kind = 130;
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 135)
                        kind = 135;
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 134)
                        kind = 134;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 130)
                     kind = 130;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0xeffffffaffffd9ffL & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(4);
                  break;
               case 4:
                  if ((0xeffffffbffffd9ffL & l) == 0L)
                     break;
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(4);
                  break;
               case 5:
                  if ((0x100000200L & l) != 0L && kind > 133)
                     kind = 133;
                  break;
               case 6:
                  if (curChar == 60)
                     kind = 134;
                  break;
               case 7:
                  if (curChar == 34)
                     kind = 135;
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(2, 3);
                  break;
               case 10:
               case 14:
                  if (curChar == 10 && kind > 132)
                     kind = 132;
                  break;
               case 11:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(4, 5);
                  break;
               case 12:
                  if (curChar == 13 && kind > 132)
                     kind = 132;
                  break;
               case 13:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(6, 7);
                  break;
               case 15:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(4);
                  if (curChar == 92)
                     jjAddStates(8, 13);
                  break;
               case 3:
               case 4:
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(4);
                  break;
               case 8:
                  if (curChar == 92)
                     jjAddStates(8, 13);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 4:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 131)
                     kind = 131;
                  jjCheckNAdd(4);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 16 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_10()
{
   return jjMoveNfa_10(0, 0);
}
private int jjMoveNfa_10(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 9;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffefffffdffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 145)
                        kind = 145;
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 146)
                        kind = 146;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 1:
                  if ((0xffff7ffeffffd9ffL & l) == 0L)
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 47)
                     jjCheckNAdd(1);
                  break;
               case 3:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if (curChar == 47 && kind > 144)
                     kind = 144;
                  break;
               case 5:
                  if ((0x100000200L & l) != 0L)
                     kind = 145;
                  break;
               case 6:
                  if ((0x2400L & l) != 0L && kind > 146)
                     kind = 146;
                  break;
               case 7:
                  if (curChar == 10 && kind > 146)
                     kind = 146;
                  break;
               case 8:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if (kind > 143)
                     kind = 143;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 143)
                     kind = 143;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 9 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_4()
{
   return jjMoveNfa_4(8, 0);
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 11;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 8:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(14, 16);
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 127)
                        kind = 127;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(14, 16);
                  break;
               case 1:
                  if ((0x2400L & l) != 0L)
                     jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 3:
                  if ((0x2400L & l) != 0L && kind > 126)
                     kind = 126;
                  break;
               case 4:
                  if (curChar == 10 && kind > 126)
                     kind = 126;
                  break;
               case 5:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 10)
                     jjCheckNAdd(2);
                  break;
               case 7:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 10 && kind > 127)
                     kind = 127;
                  break;
               case 10:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 8:
               case 0:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(14, 16);
                  break;
               case 2:
                  if ((0x7e0000007eL & l) != 0L)
                     jjAddStates(17, 19);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 11 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_16()
{
   return jjMoveNfa_16(0, 0);
}
private int jjMoveNfa_16(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  kind = 163;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_21()
{
   return jjMoveNfa_21(5, 0);
}
private int jjMoveNfa_21(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(0, 1);
                  else if (curChar == 42)
                     jjCheckNAddStates(20, 22);
                  break;
               case 0:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(0, 1);
                  break;
               case 1:
                  if (curChar == 42)
                     jjCheckNAddStates(20, 22);
                  break;
               case 2:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 1);
                  break;
               case 3:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 1);
                  break;
               case 4:
                  if (curChar == 47 && kind > 174)
                     kind = 174;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 0:
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 2:
               case 3:
                  jjCheckNAddTwoStates(3, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(0, 1);
                  break;
               case 2:
               case 3:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(3, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_14()
{
   return jjMoveNfa_14(0, 0);
}
private int jjMoveNfa_14(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffefffffdffL & l) != 0L)
                     jjCheckNAdd(1);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 159)
                        kind = 159;
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 158)
                        kind = 158;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 157)
                     kind = 157;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 158)
                     kind = 158;
                  break;
               case 3:
                  if (curChar == 10 && kind > 158)
                     kind = 158;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if ((0x100000200L & l) != 0L && kind > 159)
                     kind = 159;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if (kind > 157)
                     kind = 157;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(1);
                  break;
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 157)
                     kind = 157;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_11()
{
   return jjMoveNfa_11(0, 0);
}
private int jjMoveNfa_11(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 9;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffefffffdffL & l) != 0L)
                     jjCheckNAddTwoStates(1, 2);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 149)
                        kind = 149;
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 150)
                        kind = 150;
                  }
                  else if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 4;
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 1:
                  if ((0xffff7ffeffffd9ffL & l) == 0L)
                     break;
                  if (kind > 147)
                     kind = 147;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 47)
                     jjCheckNAdd(1);
                  break;
               case 3:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
                  if (curChar == 47 && kind > 148)
                     kind = 148;
                  break;
               case 5:
                  if ((0x100000200L & l) != 0L)
                     kind = 149;
                  break;
               case 6:
                  if ((0x2400L & l) != 0L && kind > 150)
                     kind = 150;
                  break;
               case 7:
                  if (curChar == 10 && kind > 150)
                     kind = 150;
                  break;
               case 8:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if (kind > 147)
                     kind = 147;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(1, 2);
                  break;
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 147)
                     kind = 147;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 9 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_17(int pos, long active0, long active1, long active2)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_17(int pos, long active0, long active1, long active2)
{
   return jjMoveNfa_17(jjStopStringLiteralDfa_17(pos, active0, active1, active2), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_17()
{
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 164);
      case 41:
         return jjStopAtPos(0, 165);
      default :
         return jjMoveNfa_17(0, 0);
   }
}
private int jjMoveNfa_17(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 23;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 169)
                        kind = 169;
                     jjCheckNAdd(6);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjAddStates(0, 1);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 167)
                        kind = 167;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 166)
                        kind = 166;
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 8;
                  else if (curChar == 36)
                  {
                     if (kind > 169)
                        kind = 169;
                     jjCheckNAdd(5);
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 166)
                     kind = 166;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0x100000200L & l) != 0L && kind > 167)
                     kind = 167;
                  break;
               case 4:
                  if (curChar != 36)
                     break;
                  if (kind > 169)
                     kind = 169;
                  jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 169)
                     kind = 169;
                  jjCheckNAdd(5);
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 169)
                     kind = 169;
                  jjCheckNAdd(6);
                  break;
               case 7:
                  if (curChar == 46 && kind > 169)
                     kind = 169;
                  break;
               case 8:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if ((0x280000000000L & l) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 11:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 169)
                     kind = 169;
                  jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 169)
                     kind = 169;
                  jjCheckNAdd(12);
                  break;
               case 13:
                  if (curChar == 48)
                     jjCheckNAdd(14);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 169)
                     kind = 169;
                  jjCheckNAdd(14);
                  break;
               case 16:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(23, 24);
                  break;
               case 17:
               case 21:
                  if (curChar == 10 && kind > 168)
                     kind = 168;
                  break;
               case 18:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(25, 26);
                  break;
               case 19:
                  if (curChar == 13 && kind > 168)
                     kind = 168;
                  break;
               case 20:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(27, 28);
                  break;
               case 22:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 169)
                        kind = 169;
                     jjCheckNAdd(5);
                  }
                  else if (curChar == 92)
                     jjAddStates(29, 34);
                  break;
               case 4:
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 169)
                     kind = 169;
                  jjCheckNAdd(5);
                  break;
               case 15:
                  if (curChar == 92)
                     jjAddStates(29, 34);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 23 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 115;
            return 14;
         }
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 115;
            return 6;
         }
         if ((active1 & 0x7e01bf8L) != 0L)
         {
            jjmatchedKind = 115;
            return 59;
         }
         return -1;
      case 1:
         if ((active1 & 0x1c01bf8L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 115;
               jjmatchedPos = 1;
            }
            return 59;
         }
         if ((active1 & 0x6200000L) != 0L)
            return 59;
         if ((active1 & 0x400L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 115;
               jjmatchedPos = 1;
            }
            return 5;
         }
         if ((active1 & 0x60000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 115;
               jjmatchedPos = 1;
            }
            return 13;
         }
         return -1;
      case 2:
         if ((active1 & 0x67c01bf8L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 2;
            return 59;
         }
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 2;
            return 4;
         }
         return -1;
      case 3:
         if ((active1 & 0xc01200L) != 0L)
            return 59;
         if ((active1 & 0x670009f8L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 3;
            return 59;
         }
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 3;
            return 3;
         }
         return -1;
      case 4:
         if ((active1 & 0x64000178L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 4;
            return 59;
         }
         if ((active1 & 0x3000880L) != 0L)
            return 59;
         if ((active1 & 0x400L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 4;
            return 2;
         }
         return -1;
      case 5:
         if ((active1 & 0x60000128L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 5;
            return 59;
         }
         if ((active1 & 0x400L) != 0L)
            return 1;
         if ((active1 & 0x4000050L) != 0L)
            return 59;
         return -1;
      case 6:
         if ((active1 & 0x60000000L) != 0L)
         {
            if (jjmatchedPos != 6)
            {
               jjmatchedKind = 115;
               jjmatchedPos = 6;
            }
            return 59;
         }
         if ((active1 & 0x128L) != 0L)
            return 59;
         return -1;
      case 7:
         if ((active1 & 0x60000020L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 7;
            return 59;
         }
         return -1;
      case 8:
         if ((active1 & 0x60000020L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 8;
            return 59;
         }
         return -1;
      case 9:
         if ((active1 & 0x60000020L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 9;
            return 59;
         }
         return -1;
      case 10:
         if ((active1 & 0x60000020L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 10;
            return 59;
         }
         return -1;
      case 11:
         if ((active1 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 11;
            return 59;
         }
         if ((active1 & 0x20L) != 0L)
            return 59;
         return -1;
      case 12:
         if ((active1 & 0x60000000L) != 0L)
            return 59;
         return -1;
      case 13:
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 13;
            return 59;
         }
         return -1;
      case 14:
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 14;
            return 59;
         }
         return -1;
      case 15:
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 15;
            return 59;
         }
         return -1;
      case 16:
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 115;
            jjmatchedPos = 16;
            return 59;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0, long active1)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa1_1(0x60000000L);
      case 100:
         return jjMoveStringLiteralDfa1_1(0x400L);
      case 101:
         return jjMoveStringLiteralDfa1_1(0x1c00080L);
      case 105:
         return jjMoveStringLiteralDfa1_1(0x6200238L);
      case 108:
         return jjMoveStringLiteralDfa1_1(0x1000L);
      case 112:
         return jjMoveStringLiteralDfa1_1(0x40L);
      case 117:
         return jjMoveStringLiteralDfa1_1(0x800L);
      case 119:
         return jjMoveStringLiteralDfa1_1(0x100L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa2_1(active1, 0x60000000L);
      case 97:
         return jjMoveStringLiteralDfa2_1(active1, 0x100L);
      case 101:
         return jjMoveStringLiteralDfa2_1(active1, 0x400L);
      case 102:
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 85;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_1(active1, 0x6000000L);
      case 105:
         return jjMoveStringLiteralDfa2_1(active1, 0x1000L);
      case 108:
         return jjMoveStringLiteralDfa2_1(active1, 0xc00000L);
      case 109:
         return jjMoveStringLiteralDfa2_1(active1, 0x10L);
      case 110:
         return jjMoveStringLiteralDfa2_1(active1, 0x1000a28L);
      case 114:
         return jjMoveStringLiteralDfa2_1(active1, 0xc0L);
      default :
         break;
   }
   return jjStartNfa_1(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_1(active1, 0x40L);
      case 99:
         return jjMoveStringLiteralDfa3_1(active1, 0x28L);
      case 100:
         return jjMoveStringLiteralDfa3_1(active1, 0x3000800L);
      case 102:
         return jjMoveStringLiteralDfa3_1(active1, 0x600L);
      case 104:
         return jjMoveStringLiteralDfa3_1(active1, 0x60000000L);
      case 105:
         return jjMoveStringLiteralDfa3_1(active1, 0x400000L);
      case 110:
         return jjMoveStringLiteralDfa3_1(active1, 0x4001000L);
      case 112:
         return jjMoveStringLiteralDfa3_1(active1, 0x10L);
      case 114:
         return jjMoveStringLiteralDfa3_1(active1, 0x180L);
      case 115:
         return jjMoveStringLiteralDfa3_1(active1, 0x800000L);
      default :
         break;
   }
   return jjStartNfa_1(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_1(active1, 0x60000000L);
      case 100:
         return jjMoveStringLiteralDfa4_1(active1, 0x4000000L);
      case 101:
         if ((active1 & 0x1000L) != 0L)
            return jjStartNfaWithStates_1(3, 76, 59);
         else if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_1(3, 87, 59);
         return jjMoveStringLiteralDfa4_1(active1, 0x2000800L);
      case 102:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_1(3, 86, 59);
         break;
      case 103:
         return jjMoveStringLiteralDfa4_1(active1, 0x40L);
      case 105:
         return jjMoveStringLiteralDfa4_1(active1, 0x1000400L);
      case 108:
         return jjMoveStringLiteralDfa4_1(active1, 0x28L);
      case 110:
         return jjMoveStringLiteralDfa4_1(active1, 0x100L);
      case 111:
         if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_1(3, 73, 59);
         return jjMoveStringLiteralDfa4_1(active1, 0x90L);
      default :
         break;
   }
   return jjStartNfa_1(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa5_1(active1, 0x4000000L);
      case 102:
         if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_1(4, 75, 59);
         else if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_1(4, 88, 59);
         else if ((active1 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_1(4, 89, 59);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_1(active1, 0x100L);
      case 109:
         return jjMoveStringLiteralDfa5_1(active1, 0x40L);
      case 110:
         return jjMoveStringLiteralDfa5_1(active1, 0x400L);
      case 114:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_1(4, 71, 59);
         return jjMoveStringLiteralDfa5_1(active1, 0x10L);
      case 115:
         return jjMoveStringLiteralDfa5_1(active1, 0x60000000L);
      case 117:
         return jjMoveStringLiteralDfa5_1(active1, 0x28L);
      default :
         break;
   }
   return jjStartNfa_1(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa6_1(active1, 0x60000000L);
      case 97:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_1(5, 70, 59);
         break;
      case 100:
         return jjMoveStringLiteralDfa6_1(active1, 0x28L);
      case 101:
         if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_1(5, 74, 1);
         break;
      case 102:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_1(5, 90, 59);
         break;
      case 110:
         return jjMoveStringLiteralDfa6_1(active1, 0x100L);
      case 116:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_1(5, 68, 59);
         break;
      default :
         break;
   }
   return jjStartNfa_1(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x8L) != 0L)
         {
            jjmatchedKind = 67;
            jjmatchedPos = 6;
         }
         return jjMoveStringLiteralDfa7_1(active1, 0x20L);
      case 103:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_1(6, 72, 59);
         break;
      case 105:
         return jjMoveStringLiteralDfa7_1(active1, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_1(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(5, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa8_1(active1, 0x20L);
      case 110:
         return jjMoveStringLiteralDfa8_1(active1, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_1(6, 0L, active1);
}
private int jjMoveStringLiteralDfa8_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(6, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa9_1(active1, 0x60000000L);
      case 110:
         return jjMoveStringLiteralDfa9_1(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_1(7, 0L, active1);
}
private int jjMoveStringLiteralDfa9_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(7, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa10_1(active1, 0x20L);
      case 108:
         return jjMoveStringLiteralDfa10_1(active1, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_1(8, 0L, active1);
}
private int jjMoveStringLiteralDfa10_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(8, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 117:
         return jjMoveStringLiteralDfa11_1(active1, 0x60000000L);
      case 120:
         return jjMoveStringLiteralDfa11_1(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_1(9, 0L, active1);
}
private int jjMoveStringLiteralDfa11_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(9, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(10, 0L, active1);
      return 11;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa12_1(active1, 0x60000000L);
      case 116:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_1(11, 69, 59);
         break;
      default :
         break;
   }
   return jjStartNfa_1(10, 0L, active1);
}
private int jjMoveStringLiteralDfa12_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(10, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(11, 0L, active1);
      return 12;
   }
   switch(curChar)
   {
      case 101:
         if ((active1 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 93;
            jjmatchedPos = 12;
         }
         return jjMoveStringLiteralDfa13_1(active1, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_1(11, 0L, active1);
}
private int jjMoveStringLiteralDfa13_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(11, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(12, 0L, active1);
      return 13;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa14_1(active1, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_1(12, 0L, active1);
}
private int jjMoveStringLiteralDfa14_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(12, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(13, 0L, active1);
      return 14;
   }
   switch(curChar)
   {
      case 110:
         return jjMoveStringLiteralDfa15_1(active1, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_1(13, 0L, active1);
}
private int jjMoveStringLiteralDfa15_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(13, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(14, 0L, active1);
      return 15;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa16_1(active1, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_1(14, 0L, active1);
}
private int jjMoveStringLiteralDfa16_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(14, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(15, 0L, active1);
      return 16;
   }
   switch(curChar)
   {
      case 120:
         return jjMoveStringLiteralDfa17_1(active1, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_1(15, 0L, active1);
}
private int jjMoveStringLiteralDfa17_1(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_1(15, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 116:
         if ((active1 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_1(17, 94, 59);
         break;
      default :
         break;
   }
   return jjStartNfa_1(16, 0L, active1);
}
private int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 98;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 59:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 5:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 1:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 14:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 6:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 2:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 113)
                        kind = 113;
                     jjCheckNAddStates(35, 45);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 78)
                        kind = 78;
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 77)
                        kind = 77;
                  }
                  else if (curChar == 62)
                     jjAddStates(46, 47);
                  else if (curChar == 60)
                     jjAddStates(48, 49);
                  else if (curChar == 47)
                     jjAddStates(50, 51);
                  else if (curChar == 41)
                  {
                     if (kind > 117)
                        kind = 117;
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 116)
                        kind = 116;
                  }
                  else if (curChar == 36)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 34;
                  else if (curChar == 58)
                  {
                     if (kind > 112)
                        kind = 112;
                  }
                  else if (curChar == 42)
                  {
                     if (kind > 110)
                        kind = 110;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 109)
                        kind = 109;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  else if (curChar == 38)
                  {
                     if (kind > 105)
                        kind = 105;
                  }
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 16;
                  else if (curChar == 63)
                  {
                     if (kind > 111)
                        kind = 111;
                  }
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(61);
                  }
                  else if (curChar == 48)
                  {
                     if (kind > 113)
                        kind = 113;
                     jjCheckNAddStates(52, 57);
                  }
                  else if (curChar == 13)
                     jjAddStates(58, 59);
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if (curChar == 62)
                  {
                     if (kind > 99)
                        kind = 99;
                  }
                  else if (curChar == 60)
                  {
                     if (kind > 98)
                        kind = 98;
                  }
                  else if (curChar == 33)
                  {
                     if (kind > 91)
                        kind = 91;
                  }
                  break;
               case 4:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 13:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 16:
                  if (curChar == 61 && kind > 96)
                     kind = 96;
                  break;
               case 17:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 61 && kind > 97)
                     kind = 97;
                  break;
               case 19:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 60 && kind > 98)
                     kind = 98;
                  break;
               case 21:
                  if (curChar == 62 && kind > 99)
                     kind = 99;
                  break;
               case 22:
                  if (curChar == 38 && kind > 102)
                     kind = 102;
                  break;
               case 23:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 27:
                  if (curChar == 38 && kind > 105)
                     kind = 105;
                  break;
               case 28:
                  if (curChar == 45 && kind > 108)
                     kind = 108;
                  break;
               case 29:
                  if (curChar == 43 && kind > 109)
                     kind = 109;
                  break;
               case 30:
                  if (curChar == 42 && kind > 110)
                     kind = 110;
                  break;
               case 31:
                  if (curChar == 63)
                     kind = 111;
                  break;
               case 32:
                  if (curChar == 58)
                     kind = 112;
                  break;
               case 33:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(60, 63);
                  break;
               case 36:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(64, 66);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(67, 73);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if (curChar != 46)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(74, 77);
                  break;
               case 43:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 44:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(78, 80);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(81, 90);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(46, 47);
                  break;
               case 48:
                  if ((0x280000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(91, 93);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(94, 103);
                  break;
               case 51:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(104, 106);
                  break;
               case 53:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(54);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(54, 38);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(107, 117);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(118, 127);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjCheckNAddStates(128, 138);
                  break;
               case 58:
                  if (curChar != 36)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 60:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(61);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(61);
                  break;
               case 62:
                  if (curChar == 40)
                     kind = 116;
                  break;
               case 63:
                  if (curChar == 41)
                     kind = 117;
                  break;
               case 65:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(139, 140);
                  break;
               case 66:
               case 70:
                  if (curChar == 10 && kind > 79)
                     kind = 79;
                  break;
               case 67:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(141, 142);
                  break;
               case 68:
                  if (curChar == 13 && kind > 79)
                     kind = 79;
                  break;
               case 69:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(143, 144);
                  break;
               case 71:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if ((0x2400L & l) != 0L && kind > 77)
                     kind = 77;
                  break;
               case 73:
                  if (curChar == 13)
                     jjAddStates(58, 59);
                  break;
               case 74:
                  if (curChar == 10 && kind > 77)
                     kind = 77;
                  break;
               case 75:
                  if (curChar == 10 && kind > 83)
                     kind = 83;
                  break;
               case 76:
                  if ((0x100000200L & l) != 0L && kind > 78)
                     kind = 78;
                  break;
               case 77:
                  if (curChar == 47)
                     jjAddStates(50, 51);
                  break;
               case 78:
                  if (curChar == 47 && kind > 82)
                     kind = 82;
                  break;
               case 79:
                  if (curChar == 42 && kind > 84)
                     kind = 84;
                  break;
               case 80:
                  if (curChar == 60)
                     jjAddStates(48, 49);
                  break;
               case 81:
                  if (curChar == 61 && kind > 100)
                     kind = 100;
                  break;
               case 82:
                  if (curChar == 60 && kind > 106)
                     kind = 106;
                  break;
               case 83:
                  if (curChar == 62)
                     jjAddStates(46, 47);
                  break;
               case 84:
                  if (curChar == 61 && kind > 101)
                     kind = 101;
                  break;
               case 85:
                  if (curChar == 62 && kind > 107)
                     kind = 107;
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(35, 45);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(145, 147);
                  break;
               case 89:
                  if (curChar != 48)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(148, 152);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(153, 156);
                  break;
               case 93:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(157, 160);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(95);
                  break;
               case 96:
                  if (curChar != 48)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(52, 57);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(97);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 100)
                  {
                     if (kind > 92)
                        kind = 92;
                  }
                  break;
               case 14:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 6:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 2:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  else if (curChar == 92)
                     jjAddStates(161, 166);
                  else if (curChar == 124)
                  {
                     if (kind > 104)
                        kind = 104;
                  }
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 14;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 4:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 13:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 115)
                        kind = 115;
                     jjCheckNAdd(59);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 7:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 110 && kind > 95)
                     kind = 95;
                  break;
               case 9:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 15:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 24:
                  if (curChar == 124 && kind > 103)
                     kind = 103;
                  break;
               case 25:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 124 && kind > 104)
                     kind = 104;
                  break;
               case 35:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(167, 168);
                  break;
               case 38:
                  if ((0x5000000050L & l) == 0L)
                     break;
                  if (kind > 114)
                     kind = 114;
                  jjAddStates(169, 170);
                  break;
               case 42:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(171, 172);
                  break;
               case 47:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(173, 174);
                  break;
               case 52:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(175, 176);
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 115)
                     kind = 115;
                  jjCheckNAdd(59);
                  break;
               case 64:
                  if (curChar == 92)
                     jjAddStates(161, 166);
                  break;
               case 87:
                  if ((0x100000001000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddTwoStates(88, 89);
                  break;
               case 90:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(91);
                  break;
               case 91:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(153, 156);
                  break;
               case 92:
                  if ((0x100000201000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(177, 179);
                  break;
               case 94:
                  if ((0x100000001000L & l) == 0L)
                     break;
                  if (kind > 113)
                     kind = 113;
                  jjCheckNAddStates(180, 182);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 98 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_27()
{
   return jjMoveNfa_27(5, 0);
}
private int jjMoveNfa_27(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 24;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0xffff7ffbffffdbffL & l) != 0L)
                  {
                     if (kind > 196)
                        kind = 196;
                     jjCheckNAddStates(183, 185);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 201)
                        kind = 201;
                  }
                  else if (curChar == 47)
                     jjCheckNAddStates(186, 188);
                  else if (curChar == 34)
                  {
                     if (kind > 200)
                        kind = 200;
                  }
                  if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 202)
                        kind = 202;
                     jjCheckNAddStates(189, 191);
                  }
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 0:
                  if ((0xffff7ffbffffdbffL & l) == 0L)
                     break;
                  if (kind > 196)
                     kind = 196;
                  jjCheckNAddStates(183, 185);
                  break;
               case 1:
                  if (curChar == 47)
                     jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0xffff7bffffffdbffL & l) == 0L)
                     break;
                  if (kind > 196)
                     kind = 196;
                  jjCheckNAddStates(183, 185);
                  break;
               case 4:
                  if ((0xfffffffeffffd9ffL & l) == 0L)
                     break;
                  if (kind > 196)
                     kind = 196;
                  jjCheckNAddStates(183, 185);
                  break;
               case 6:
                  if ((0x2400L & l) != 0L && kind > 201)
                     kind = 201;
                  break;
               case 7:
                  if (curChar == 10 && kind > 201)
                     kind = 201;
                  break;
               case 8:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 47)
                     jjCheckNAddStates(186, 188);
                  break;
               case 10:
                  if (curChar == 47 && kind > 197)
                     kind = 197;
                  break;
               case 11:
                  if (curChar == 42 && kind > 199)
                     kind = 199;
                  break;
               case 13:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(192, 193);
                  break;
               case 14:
               case 18:
                  if (curChar == 10 && kind > 198)
                     kind = 198;
                  break;
               case 15:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(194, 195);
                  break;
               case 16:
                  if (curChar == 13 && kind > 198)
                     kind = 198;
                  break;
               case 17:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(196, 197);
                  break;
               case 19:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 202)
                     kind = 202;
                  jjCheckNAddStates(189, 191);
                  break;
               case 21:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(21, 22);
                  break;
               case 23:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 202)
                     kind = 202;
                  jjCheckNAdd(23);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0xffffffffefffffffL & l) != 0L)
                  {
                     if (kind > 196)
                        kind = 196;
                     jjCheckNAddStates(183, 185);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(198, 204);
                  break;
               case 0:
               case 4:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 196)
                     kind = 196;
                  jjCheckNAddStates(183, 185);
                  break;
               case 2:
                  if (kind > 196)
                     kind = 196;
                  jjCheckNAddStates(183, 185);
                  break;
               case 3:
                  if (curChar == 92)
                     jjCheckNAdd(4);
                  break;
               case 12:
                  if (curChar == 92)
                     jjCheckNAddStates(198, 204);
                  break;
               case 22:
                  if (curChar == 92)
                     jjCheckNAddStates(205, 210);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 0:
               case 2:
               case 4:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 196)
                     kind = 196;
                  jjCheckNAddStates(183, 185);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 24 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_22()
{
   return jjMoveNfa_22(0, 0);
}
private int jjMoveNfa_22(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 39;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffff7ffbffffdbffL & l) != 0L)
                  {
                     if (kind > 181)
                        kind = 181;
                     jjCheckNAddStates(211, 214);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 180)
                        kind = 180;
                  }
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(27, 7);
                  else if (curChar == 34)
                  {
                     if (kind > 177)
                        kind = 177;
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 182)
                        kind = 182;
                     jjCheckNAdd(15);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 178)
                        kind = 178;
                     jjCheckNAddTwoStates(29, 30);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjAddStates(27, 28);
                  else if (curChar == 47)
                     jjCheckNAddTwoStates(25, 10);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 36)
                  {
                     if (kind > 182)
                        kind = 182;
                     jjCheckNAdd(14);
                  }
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 1:
                  if ((0x2400L & l) != 0L && kind > 180)
                     kind = 180;
                  break;
               case 2:
                  if (curChar == 10 && kind > 180)
                     kind = 180;
                  break;
               case 3:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if ((0xffff7ffbffffdbffL & l) == 0L)
                     break;
                  if (kind > 181)
                     kind = 181;
                  jjCheckNAddStates(211, 214);
                  break;
               case 5:
                  if (curChar != 47)
                     break;
                  if (kind > 181)
                     kind = 181;
                  jjCheckNAddStates(211, 214);
                  break;
               case 6:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 47)
                     jjCheckNAdd(7);
                  break;
               case 9:
                  if (curChar == 47)
                     jjCheckNAdd(10);
                  break;
               case 10:
                  if ((0xffff7bffffffdbffL & l) == 0L)
                     break;
                  if (kind > 181)
                     kind = 181;
                  jjCheckNAddStates(211, 214);
                  break;
               case 12:
                  if ((0xfffffffeffffdbffL & l) == 0L)
                     break;
                  if (kind > 181)
                     kind = 181;
                  jjCheckNAddStates(211, 214);
                  break;
               case 13:
                  if (curChar != 36)
                     break;
                  if (kind > 182)
                     kind = 182;
                  jjCheckNAdd(14);
                  break;
               case 14:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 182)
                     kind = 182;
                  jjCheckNAdd(14);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 182)
                     kind = 182;
                  jjCheckNAdd(15);
                  break;
               case 16:
                  if (curChar == 46 && kind > 182)
                     kind = 182;
                  break;
               case 17:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if ((0x280000000000L & l) != 0L)
                     jjAddStates(27, 28);
                  break;
               case 20:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 182)
                     kind = 182;
                  jjCheckNAdd(21);
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 182)
                     kind = 182;
                  jjCheckNAdd(21);
                  break;
               case 22:
                  if (curChar == 48)
                     jjCheckNAdd(23);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 182)
                     kind = 182;
                  jjCheckNAdd(23);
                  break;
               case 24:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(25, 10);
                  break;
               case 25:
                  if (curChar == 47 && kind > 175)
                     kind = 175;
                  break;
               case 26:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(27, 7);
                  break;
               case 27:
                  if (curChar == 42 && kind > 176)
                     kind = 176;
                  break;
               case 28:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 178)
                     kind = 178;
                  jjCheckNAddTwoStates(29, 30);
                  break;
               case 29:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(29, 30);
                  break;
               case 31:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(215, 216);
                  break;
               case 32:
               case 36:
                  if (curChar == 10 && kind > 179)
                     kind = 179;
                  break;
               case 33:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(217, 218);
                  break;
               case 34:
                  if (curChar == 13 && kind > 179)
                     kind = 179;
                  break;
               case 35:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(219, 220);
                  break;
               case 37:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffefffffffL & l) != 0L)
                  {
                     if (kind > 181)
                        kind = 181;
                     jjCheckNAddStates(211, 214);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(221, 227);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 182)
                        kind = 182;
                     jjCheckNAdd(14);
                  }
                  break;
               case 4:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 181)
                     kind = 181;
                  jjCheckNAddStates(211, 214);
                  break;
               case 10:
               case 12:
                  if (kind > 181)
                     kind = 181;
                  jjCheckNAddStates(211, 214);
                  break;
               case 11:
                  if (curChar == 92)
                     jjCheckNAdd(12);
                  break;
               case 13:
               case 14:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 182)
                     kind = 182;
                  jjCheckNAdd(14);
                  break;
               case 30:
                  if (curChar == 92)
                     jjCheckNAddStates(228, 233);
                  break;
               case 38:
                  if (curChar == 92)
                     jjCheckNAddStates(221, 227);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 4:
               case 10:
               case 12:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 181)
                     kind = 181;
                  jjCheckNAddStates(211, 214);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 39 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_12()
{
   return jjMoveNfa_12(1, 0);
}
private int jjMoveNfa_12(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 151)
                        kind = 151;
                     jjCheckNAdd(0);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 152)
                        kind = 152;
                  }
                  if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 153)
                        kind = 153;
                  }
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 0:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 151)
                     kind = 151;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 10 && kind > 152)
                     kind = 152;
                  break;
               case 3:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if ((0x100000200L & l) != 0L && kind > 153)
                     kind = 153;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  kind = 151;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 151)
                     kind = 151;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_13()
{
   return jjMoveNfa_13(0, 0);
}
private int jjMoveNfa_13(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 6;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffefffffdffL & l) != 0L)
                     jjCheckNAdd(1);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 156)
                        kind = 156;
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 155)
                        kind = 155;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 1:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 154)
                     kind = 154;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x2400L & l) != 0L && kind > 155)
                     kind = 155;
                  break;
               case 3:
                  if (curChar == 10 && kind > 155)
                     kind = 155;
                  break;
               case 4:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if ((0x100000200L & l) != 0L && kind > 156)
                     kind = 156;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if (kind > 154)
                     kind = 154;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(1);
                  break;
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 154)
                     kind = 154;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 6 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_29()
{
   return jjMoveNfa_29(3, 0);
}
private int jjMoveNfa_29(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 10;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((0xfffffbffffffffffL & l) != 0L)
                  {
                     if (kind > 205)
                        kind = 205;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  else if (curChar == 42)
                     jjAddStates(234, 235);
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 0:
                  if ((0xfffffbffffffffffL & l) == 0L)
                     break;
                  if (kind > 205)
                     kind = 205;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 1:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffff7fffffffffffL & l) == 0L)
                     break;
                  if (kind > 205)
                     kind = 205;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 4:
                  if (curChar == 47 && kind > 206)
                     kind = 206;
                  break;
               case 5:
                  if (curChar == 47)
                     jjCheckNAddStates(236, 238);
                  break;
               case 6:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(236, 238);
                  break;
               case 7:
                  if ((0x2400L & l) != 0L && kind > 207)
                     kind = 207;
                  break;
               case 8:
                  if (curChar == 10 && kind > 207)
                     kind = 207;
                  break;
               case 9:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 0:
               case 2:
                  if (kind > 205)
                     kind = 205;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
               case 0:
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 205)
                     kind = 205;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 10 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_8()
{
   return jjMoveNfa_8(0, 0);
}
private int jjMoveNfa_8(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffbffffffffL & l) != 0L)
                  {
                     if (kind > 139)
                        kind = 139;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 138)
                        kind = 138;
                  }
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) == 0L)
                     break;
                  kind = 139;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  kind = 139;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 139)
                     kind = 139;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_5()
{
   return jjMoveNfa_5(0, 0);
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 129)
                        kind = 129;
                     jjCheckNAdd(3);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 128)
                        kind = 128;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 128)
                     kind = 128;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  kind = 129;
                  jjCheckNAdd(3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 3:
                  kind = 129;
                  jjCheckNAdd(3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 3:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 129)
                     kind = 129;
                  jjCheckNAdd(3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_2()
{
   return jjMoveNfa_2(1, 0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0xffff7fffffffdbffL & l) != 0L)
                  {
                     if (kind > 118)
                        kind = 118;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 47)
                     jjAddStates(239, 240);
                  break;
               case 0:
                  if ((0xffff7fffffffdbffL & l) == 0L)
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 47 && kind > 119)
                     kind = 119;
                  break;
               case 3:
                  if (curChar == 42 && kind > 120)
                     kind = 120;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  kind = 118;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 118)
                     kind = 118;
                  jjCheckNAdd(0);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_3()
{
   return jjMoveNfa_3(0, 0);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 122)
                        kind = 122;
                  }
                  else if (curChar == 60)
                     jjCheckNAddTwoStates(4, 5);
                  else if (curChar == 40)
                  {
                     if (kind > 124)
                        kind = 124;
                  }
                  else if (curChar == 41)
                  {
                     if (kind > 123)
                        kind = 123;
                  }
                  break;
               case 1:
                  if (curChar == 41)
                     kind = 123;
                  break;
               case 2:
                  if (curChar == 40)
                     kind = 124;
                  break;
               case 3:
                  if (curChar == 60)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 4:
                  if ((0xbffffcffffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(4, 5);
                  break;
               case 5:
                  if (curChar == 62)
                     kind = 125;
                  break;
               case 7:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(241, 242);
                  break;
               case 8:
               case 12:
                  if (curChar == 10 && kind > 121)
                     kind = 121;
                  break;
               case 9:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(2, 3);
                  break;
               case 10:
                  if (curChar == 13 && kind > 121)
                     kind = 121;
                  break;
               case 11:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(0, 1);
                  break;
               case 13:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 92)
                     jjAddStates(243, 248);
                  break;
               case 4:
                  jjAddStates(234, 235);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(234, 235);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_28()
{
   return jjMoveNfa_28(0, 0);
}
private int jjMoveNfa_28(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffbffffffffL & l) != 0L)
                  {
                     if (kind > 204)
                        kind = 204;
                     jjCheckNAddTwoStates(1, 2);
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 203)
                        kind = 203;
                  }
                  break;
               case 1:
                  if ((0xfffffffbffffffffL & l) == 0L)
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 3:
                  if ((0xfffffffeffffd9ffL & l) == 0L)
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffefffffffL & l) != 0L)
                  {
                     if (kind > 204)
                        kind = 204;
                     jjCheckNAddTwoStates(1, 2);
                  }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 1:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               case 2:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 3:
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
               case 3:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 204)
                     kind = 204;
                  jjCheckNAddTwoStates(1, 2);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_19()
{
   return jjMoveNfa_19(5, 0);
}
private int jjMoveNfa_19(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(0, 1);
                  else if (curChar == 42)
                     jjCheckNAddStates(20, 22);
                  break;
               case 0:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(0, 1);
                  break;
               case 1:
                  if (curChar == 42)
                     jjCheckNAddStates(20, 22);
                  break;
               case 2:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 1);
                  break;
               case 3:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 1);
                  break;
               case 4:
                  if (curChar == 47 && kind > 172)
                     kind = 172;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 0:
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 2:
               case 3:
                  jjCheckNAddTwoStates(3, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 0:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(0, 1);
                  break;
               case 2:
               case 3:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(3, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_7()
{
   return jjMoveNfa_7(0, 0);
}
private int jjMoveNfa_7(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xbfffffffffffffffL & l) != 0L)
                  {
                     if (kind > 137)
                        kind = 137;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 136)
                        kind = 136;
                  }
                  break;
               case 1:
                  if ((0xbfffffffffffffffL & l) == 0L)
                     break;
                  kind = 137;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  kind = 137;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 137)
                     kind = 137;
                  jjCheckNAdd(1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_26(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_26(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_26(jjStopStringLiteralDfa_26(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_26()
{
   switch(curChar)
   {
      case 41:
         return jjStopAtPos(0, 194);
      default :
         return jjMoveNfa_26(0, 0);
   }
}
private int jjMoveNfa_26(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffcffffffffffL & l) == 0L)
                     break;
                  kind = 195;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 195;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 195)
                     kind = 195;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_18()
{
   return jjMoveNfa_18(0, 0);
}
private int jjMoveNfa_18(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffffffdbffL & l) != 0L)
                  {
                     if (kind > 171)
                        kind = 171;
                     jjCheckNAdd(3);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 170)
                        kind = 170;
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if (curChar == 10 && kind > 170)
                     kind = 170;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  kind = 171;
                  jjCheckNAdd(3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 3:
                  kind = 171;
                  jjCheckNAdd(3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 3:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 171)
                     kind = 171;
                  jjCheckNAdd(3);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_25(int pos, long active0, long active1, long active2, long active3)
{
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_25(int pos, long active0, long active1, long active2, long active3)
{
   return jjMoveNfa_25(jjStopStringLiteralDfa_25(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_25()
{
   switch(curChar)
   {
      case 41:
         return jjStopAtPos(0, 191);
      default :
         return jjMoveNfa_25(0, 0);
   }
}
private int jjMoveNfa_25(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 29;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 187)
                        kind = 187;
                     jjCheckNAdd(2);
                  }
                  else if ((0x280000000000L & l) != 0L)
                     jjAddStates(249, 250);
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 193)
                        kind = 193;
                  }
                  else if (curChar == 47)
                     jjAddStates(251, 252);
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 4;
                  else if (curChar == 36)
                  {
                     if (kind > 187)
                        kind = 187;
                     jjCheckNAdd(1);
                  }
                  break;
               case 1:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 46 && kind > 187)
                     kind = 187;
                  break;
               case 4:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 5:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if ((0x100000200L & l) != 0L && kind > 193)
                     kind = 193;
                  break;
               case 8:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(253, 254);
                  break;
               case 9:
               case 13:
                  if (curChar == 10 && kind > 192)
                     kind = 192;
                  break;
               case 10:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(255, 256);
                  break;
               case 11:
                  if (curChar == 13 && kind > 192)
                     kind = 192;
                  break;
               case 12:
                  if ((0x100000200L & l) != 0L)
                     jjAddStates(257, 258);
                  break;
               case 14:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 15:
                  if ((0x280000000000L & l) != 0L)
                     jjAddStates(249, 250);
                  break;
               case 16:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(17);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(17);
                  break;
               case 18:
                  if (curChar == 48)
                     jjCheckNAdd(19);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(19);
                  break;
               case 20:
                  if (curChar == 47)
                     jjAddStates(251, 252);
                  break;
               case 21:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(22, 23);
                  break;
               case 22:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(22, 23);
                  break;
               case 23:
                  if (curChar == 42)
                     jjCheckNAddStates(259, 261);
                  break;
               case 24:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(25, 23);
                  break;
               case 25:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(25, 23);
                  break;
               case 26:
                  if (curChar == 47 && kind > 188)
                     kind = 188;
                  break;
               case 27:
                  if (curChar == 47)
                     jjCheckNAdd(28);
                  break;
               case 28:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 189)
                     kind = 189;
                  jjCheckNAdd(28);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 187)
                        kind = 187;
                     jjCheckNAdd(1);
                  }
                  else if (curChar == 92)
                     jjAddStates(262, 267);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  jjCheckNAdd(1);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(262, 267);
                  break;
               case 22:
                  jjCheckNAddTwoStates(22, 23);
                  break;
               case 24:
               case 25:
                  jjCheckNAddTwoStates(25, 23);
                  break;
               case 28:
                  if (kind > 189)
                     kind = 189;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 22:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(22, 23);
                  break;
               case 24:
               case 25:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(25, 23);
                  break;
               case 28:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 189)
                     kind = 189;
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 29 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_0()
{
   return jjMoveNfa_0(5, 0);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 92;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0xffff7ff2ffffd9ffL & l) != 0L)
                  {
                     if (kind > 63)
                        kind = 63;
                     jjCheckNAddStates(268, 270);
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAddStates(271, 276);
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 64)
                        kind = 64;
                  }
                  else if (curChar == 47)
                     jjAddStates(277, 278);
                  else if (curChar == 34)
                     jjCheckNAddStates(279, 281);
                  else if (curChar == 35)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(1);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(282, 290);
                  }
                  else if (curChar == 47)
                     jjAddStates(291, 292);
                  else if (curChar == 39)
                     jjCheckNAddStates(293, 295);
                  else if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 46)
                     jjCheckNAdd(7);
                  if (curChar == 48)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(296, 298);
                  }
                  break;
               case 0:
                  if (curChar != 35)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(1);
                  break;
               case 1:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(1);
                  break;
               case 6:
                  if (curChar == 46)
                     jjCheckNAdd(7);
                  break;
               case 7:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjCheckNAddStates(299, 301);
                  break;
               case 9:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(10);
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjCheckNAddTwoStates(10, 11);
                  break;
               case 12:
                  if ((0xffff7ff2ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(268, 270);
                  break;
               case 13:
                  if ((0xffff7ffbffffdbffL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(13, 14);
                  break;
               case 14:
                  if (curChar == 39)
                     jjCheckNAddStates(302, 304);
                  break;
               case 15:
                  if (curChar != 39)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(13, 14);
                  break;
               case 16:
               case 17:
                  if (curChar == 34)
                     jjCheckNAdd(15);
                  break;
               case 19:
                  if (curChar == 35)
                     jjCheckNAdd(15);
                  break;
               case 20:
                  if (curChar == 39)
                     jjCheckNAddStates(305, 310);
                  break;
               case 21:
                  if (curChar != 39)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(268, 270);
                  break;
               case 22:
               case 23:
                  if (curChar == 34)
                     jjCheckNAdd(21);
                  break;
               case 25:
                  if (curChar == 35)
                     jjCheckNAdd(21);
                  break;
               case 26:
                  if ((0x2400L & l) != 0L && kind > 64)
                     kind = 64;
                  break;
               case 27:
                  if (curChar == 10 && kind > 64)
                     kind = 64;
                  break;
               case 28:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 34)
                     jjCheckNAddStates(279, 281);
                  break;
               case 30:
                  if ((0xfffffffbffffdbffL & l) != 0L)
                     jjCheckNAddStates(279, 281);
                  break;
               case 32:
                  if ((0x8400002400L & l) != 0L)
                     jjCheckNAddStates(279, 281);
                  break;
               case 33:
                  if (curChar == 34 && kind > 66)
                     kind = 66;
                  break;
               case 34:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(311, 314);
                  break;
               case 35:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAddStates(279, 281);
                  break;
               case 36:
                  if ((0xf000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0xff000000000000L & l) != 0L)
                     jjCheckNAdd(35);
                  break;
               case 38:
                  if (curChar == 10)
                     jjCheckNAddStates(279, 281);
                  break;
               case 39:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 39)
                     jjCheckNAddStates(293, 295);
                  break;
               case 41:
                  if (curChar != 48)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(296, 298);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjAddStates(171, 172);
                  break;
               case 45:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(45, 46);
                  break;
               case 47:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAddStates(271, 276);
                  break;
               case 48:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddTwoStates(48, 0);
                  break;
               case 49:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(49);
                  break;
               case 50:
                  if ((0x100000200L & l) != 0L)
                     jjCheckNAddStates(315, 317);
                  break;
               case 51:
                  if (curChar == 47)
                     jjAddStates(291, 292);
                  break;
               case 52:
                  if (curChar == 47)
                     jjCheckNAddStates(318, 320);
                  break;
               case 53:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(318, 320);
                  break;
               case 54:
                  if ((0x2400L & l) != 0L && kind > 3)
                     kind = 3;
                  break;
               case 55:
                  if (curChar == 10 && kind > 3)
                     kind = 3;
                  break;
               case 56:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 47)
                     jjCheckNAddStates(321, 323);
                  break;
               case 58:
                  if ((0xffffffffffffdbffL & l) != 0L)
                     jjCheckNAddStates(321, 323);
                  break;
               case 59:
                  if ((0x2400L & l) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 60:
                  if (curChar == 10 && kind > 6)
                     kind = 6;
                  break;
               case 61:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 47)
                     jjAddStates(277, 278);
                  break;
               case 63:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 64:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 65:
                  if (curChar == 42)
                     jjCheckNAddStates(324, 326);
                  break;
               case 66:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(67, 65);
                  break;
               case 67:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(67, 65);
                  break;
               case 68:
                  if (curChar == 47 && kind > 4)
                     kind = 4;
                  break;
               case 69:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(70, 71);
                  break;
               case 70:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(70, 71);
                  break;
               case 71:
                  if (curChar == 42)
                     jjCheckNAddStates(327, 329);
                  break;
               case 72:
                  if ((0xffff7bffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(73, 71);
                  break;
               case 73:
                  if ((0xfffffbffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(73, 71);
                  break;
               case 74:
                  if (curChar == 47 && kind > 7)
                     kind = 7;
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(282, 290);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(76, 77);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(78, 79);
                  break;
               case 79:
                  if (curChar != 46)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjCheckNAddStates(330, 332);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjCheckNAddStates(330, 332);
                  break;
               case 82:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(83);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjCheckNAddTwoStates(83, 11);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(84, 85);
                  break;
               case 86:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(87);
                  break;
               case 87:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjCheckNAddTwoStates(87, 11);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(333, 335);
                  break;
               case 90:
                  if ((0x280000000000L & l) != 0L)
                     jjCheckNAdd(91);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(91, 11);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(268, 270);
                  if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 2:
                  if (curChar == 109 && kind > 2)
                     kind = 2;
                  break;
               case 3:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 8:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(2, 3);
                  break;
               case 11:
                  if ((0x5000000050L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 12:
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(268, 270);
                  break;
               case 13:
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(13, 14);
                  break;
               case 18:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 24:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 30:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(279, 281);
                  break;
               case 31:
                  if (curChar == 92)
                     jjAddStates(336, 339);
                  break;
               case 32:
                  if ((0x14404410000000L & l) != 0L)
                     jjCheckNAddStates(279, 281);
                  break;
               case 42:
                  if ((0x100000001000000L & l) != 0L)
                     jjCheckNAdd(43);
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(43, 44);
                  break;
               case 44:
                  if ((0x100000201000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(44);
                  break;
               case 46:
                  if ((0x100000001000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 53:
                  jjAddStates(318, 320);
                  break;
               case 58:
                  jjAddStates(321, 323);
                  break;
               case 64:
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 66:
               case 67:
                  jjCheckNAddTwoStates(67, 65);
                  break;
               case 70:
                  jjCheckNAddTwoStates(70, 71);
                  break;
               case 72:
               case 73:
                  jjCheckNAddTwoStates(73, 71);
                  break;
               case 77:
                  if ((0x100000001000L & l) != 0L && kind > 54)
                     kind = 54;
                  break;
               case 81:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(340, 341);
                  break;
               case 85:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(342, 343);
                  break;
               case 89:
                  if ((0x2000000020L & l) != 0L)
                     jjAddStates(344, 345);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 12:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(268, 270);
                  break;
               case 13:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(13, 14);
                  break;
               case 30:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(279, 281);
                  break;
               case 53:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(318, 320);
                  break;
               case 58:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(321, 323);
                  break;
               case 64:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(64, 65);
                  break;
               case 66:
               case 67:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(67, 65);
                  break;
               case 70:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(70, 71);
                  break;
               case 72:
               case 73:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(73, 71);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 92 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_20()
{
   return jjMoveNfa_20(0, 0);
}
private int jjMoveNfa_20(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  kind = 173;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 173;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 173)
                     kind = 173;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_23()
{
   return jjMoveNfa_23(4, 0);
}
private int jjMoveNfa_23(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
                  if ((0xfffffbffffffffffL & l) != 0L)
                  {
                     if (kind > 183)
                        kind = 183;
                     jjCheckNAddTwoStates(0, 1);
                  }
                  else if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 0:
                  if ((0xfffffbffffffffffL & l) == 0L)
                     break;
                  if (kind > 183)
                     kind = 183;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 1:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
                  if ((0xffff7fffffffffffL & l) == 0L)
                     break;
                  if (kind > 183)
                     kind = 183;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               case 3:
                  if (curChar == 47 && kind > 184)
                     kind = 184;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
               case 0:
               case 2:
                  if (kind > 183)
                     kind = 183;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 4:
               case 0:
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 183)
                     kind = 183;
                  jjCheckNAddTwoStates(0, 1);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   11, 13, 9, 10, 11, 12, 13, 15, 9, 10, 11, 12, 13, 15, 0, 1, 
   7, 2, 3, 5, 1, 2, 4, 16, 17, 18, 19, 20, 22, 16, 17, 18, 
   19, 20, 22, 87, 40, 41, 46, 47, 51, 52, 38, 95, 89, 88, 84, 85, 
   81, 82, 78, 79, 88, 90, 93, 94, 97, 89, 74, 75, 33, 35, 38, 57, 
   33, 38, 56, 40, 41, 46, 47, 51, 52, 38, 42, 38, 33, 55, 38, 33, 
   45, 40, 41, 38, 33, 46, 47, 51, 52, 38, 45, 33, 38, 50, 40, 41, 
   33, 46, 47, 38, 51, 52, 38, 50, 51, 52, 38, 40, 41, 42, 38, 33, 
   46, 47, 51, 52, 38, 55, 40, 41, 33, 38, 46, 47, 51, 52, 38, 56, 
   40, 41, 33, 35, 38, 46, 47, 51, 52, 38, 57, 65, 66, 67, 68, 69, 
   71, 87, 89, 88, 88, 90, 93, 94, 89, 88, 91, 92, 89, 88, 93, 94, 
   89, 65, 66, 67, 68, 69, 71, 36, 37, 33, 39, 43, 44, 48, 49, 53, 
   54, 88, 92, 89, 88, 94, 89, 0, 1, 3, 2, 10, 11, 21, 23, 22, 
   13, 14, 15, 16, 17, 19, 4, 13, 14, 15, 16, 17, 19, 13, 14, 15, 
   16, 17, 19, 8, 4, 9, 11, 31, 32, 33, 34, 35, 37, 31, 32, 33, 
   34, 35, 37, 12, 31, 32, 33, 34, 35, 37, 4, 5, 6, 7, 9, 2, 
   3, 7, 8, 7, 8, 9, 10, 11, 13, 16, 18, 21, 27, 8, 9, 10, 
   11, 12, 14, 23, 24, 26, 8, 9, 10, 11, 12, 14, 12, 13, 20, 48, 
   0, 49, 50, 12, 40, 63, 69, 30, 31, 33, 76, 77, 78, 79, 84, 85, 
   88, 89, 11, 52, 57, 22, 24, 25, 42, 45, 46, 7, 8, 11, 16, 18, 
   19, 22, 24, 25, 16, 18, 19, 30, 31, 35, 33, 50, 12, 40, 53, 54, 
   56, 58, 59, 61, 65, 66, 68, 71, 72, 74, 80, 81, 11, 88, 89, 11, 
   32, 34, 36, 39, 82, 83, 86, 87, 90, 91, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default :
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, "\151\146", "\145\154\151\146", "\145\154\163\145", 
"\145\156\144\151\146", "\151\146\144\145\146", "\151\146\156\144\145\146", null, null, 
"\137\137\150\141\163\137\151\156\143\154\165\144\145", "\137\137\150\141\163\137\151\156\143\154\165\144\145\137\156\145\170\164", 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "DIRECTIVE",
   "IGNORETOEOL",
   "INCDEF",
   "XSYMLINK",
   "XSYMPATH",
   "INCLUDE",
   "STDPATH",
   "RELPATH",
   "PRAGMA",
   "IFDEF",
   "IFNDEF",
   "ERROR",
   "WARNING",
   "INFO",
   "UNDEFINE",
   "DEFINE",
   "CONSTANT",
   "LINE",
   "COMMENT",
   "LINECOMMENT",
   "DIRECTIVECOMMENT",
   "RVALUES",
   "RVALUES_COMMENT",
   "QUOTED_VAL",
   "MACROARGS",
   "CONTARG",
   "MACROVALS",
   "MQUOTED_VAL",
   "MACROVALS_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, 1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, 6, 6, 9, 12, 13, 14, 16, 
   15, 18, 0, -1, -1, -1, -1, 20, 0, 21, -1, -1, -1, -1, 10, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 21, -1, -1, 1, -1, 
   -1, 5, -1, 0, -1, -1, 0, -1, -1, 7, 8, 0, -1, 0, -1, 0, 0, -1, 0, 20, -1, 0, 0, 20, -1, 
   0, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, -1, 0, 17, 25, 27, 0, 22, 22, -1, 0, -1, 0, 0, 1, 
   20, 23, 24, -1, -1, 0, -1, -1, -1, 22, 22, -1, -1, -1, -1, -1, 27, -1, -1, 27, -1, -1, 20, -1, 29, 
   28, 0, -1, 27, -1, -1, 27, 0, 
};
static final long[] jjtoToken = {
   0xc840000000000001L, 0x3fffffffe00007L, 0xc600e046d88ba0eL, 0x1018L, 
};
static final long[] jjtoSkip = {
   0xfeL, 0xffc00000001ffff8L, 0xf39ff1fb927745f1L, 0xefe7L, 
};
static final long[] jjtoSpecial = {
   0xc0L, 0x0L, 0x0L, 0x0L, 
};
protected JavaCharStream input_stream;
private final int[] jjrounds = new int[98];
private final int[] jjstateSet = new int[196];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public PreProcessorTokenManager(JavaCharStream stream){
   if (JavaCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public PreProcessorTokenManager(JavaCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 98; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(JavaCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 30 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   if (jjmatchedPos < 0)
   {
      if (image == null)
         curTokenImage = "";
      else
         curTokenImage = image.toString();
      beginLine = endLine = input_stream.getBeginLine();
      beginColumn = endColumn = input_stream.getBeginColumn();
   }
   else
   {
      String im = jjstrLiteralImages[jjmatchedKind];
      curTokenImage = (im == null) ? input_stream.GetImage() : im;
      beginLine = input_stream.getBeginLine();
      beginColumn = input_stream.getBeginColumn();
      endLine = input_stream.getEndLine();
      endColumn = input_stream.getEndColumn();
   }
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       if (jjmatchedPos == 0 && jjmatchedKind > 65)
       {
          jjmatchedKind = 65;
       }
       break;
     case 1:
       try { input_stream.backup(0);
          while (curChar <= 44 && (0x100000000000L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 118;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
     case 4:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_4();
       break;
     case 5:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_5();
       break;
     case 6:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_6();
       break;
     case 7:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_7();
       break;
     case 8:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_8();
       break;
     case 9:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_9();
       break;
     case 10:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_10();
       break;
     case 11:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_11();
       break;
     case 12:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_12();
       break;
     case 13:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_13();
       break;
     case 14:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_14();
       break;
     case 15:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_15();
       break;
     case 16:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_16();
       break;
     case 17:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_17();
       break;
     case 18:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_18();
       break;
     case 19:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_19();
       break;
     case 20:
       jjmatchedKind = 173;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_20();
       break;
     case 21:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_21();
       break;
     case 22:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_22();
       break;
     case 23:
       jjmatchedKind = 183;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_23();
       break;
     case 24:
       jjmatchedKind = 186;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_24();
       break;
     case 25:
       try { input_stream.backup(0);
          while (curChar <= 44 && (0x100000000000L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_25();
       break;
     case 26:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_26();
       break;
     case 27:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_27();
       break;
     case 28:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_28();
       break;
     case 29:
       jjmatchedKind = 205;
       jjmatchedPos = -1;
       curPos = 0;
       curPos = jjMoveStringLiteralDfa0_29();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

int[] jjemptyLineNo = new int[30];
int[] jjemptyColNo = new int[30];
boolean[] jjbeenHere = new boolean[30];
void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 183 :
         if (jjmatchedPos == -1)
         {
            if (jjbeenHere[23] &&
                jjemptyLineNo[23] == input_stream.getBeginLine() &&
                jjemptyColNo[23] == input_stream.getBeginColumn())
               throw new TokenMgrError(("Error: Bailing out of infinite loop caused by repeated empty string matches at line " + input_stream.getBeginLine() + ", column " + input_stream.getBeginColumn() + "."), TokenMgrError.LOOP_DETECTED);
            jjemptyLineNo[23] = input_stream.getBeginLine();
            jjemptyColNo[23] = input_stream.getBeginColumn();
            jjbeenHere[23] = true;
         }
         break;
      case 184 :
         break;
      case 185 :
         break;
      case 205 :
         if (jjmatchedPos == -1)
         {
            if (jjbeenHere[29] &&
                jjemptyLineNo[29] == input_stream.getBeginLine() &&
                jjemptyColNo[29] == input_stream.getBeginColumn())
               throw new TokenMgrError(("Error: Bailing out of infinite loop caused by repeated empty string matches at line " + input_stream.getBeginLine() + ", column " + input_stream.getBeginColumn() + "."), TokenMgrError.LOOP_DETECTED);
            jjemptyLineNo[29] = input_stream.getBeginLine();
            jjemptyColNo[29] = input_stream.getBeginColumn();
            jjbeenHere[29] = true;
         }
         break;
      case 206 :
         break;
      case 207 :
         break;
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 87 :
        image.append(jjstrLiteralImages[87]);
        lengthOfMatch = jjstrLiteralImages[87].length();
                      if (parenNesting == 0) SwitchTo(IGNORETOEOL); else matchedToken.kind=ITEM;
         break;
      case 88 :
        image.append(jjstrLiteralImages[88]);
        lengthOfMatch = jjstrLiteralImages[88].length();
                        if (parenNesting == 0) SwitchTo(IGNORETOEOL); else matchedToken.kind=ITEM;
         break;
      case 93 :
        image.append(jjstrLiteralImages[93]);
        lengthOfMatch = jjstrLiteralImages[93].length();
                                     if (parenNesting == 0) SwitchTo(INCDEF); matchedToken.kind=ITEM;
         break;
      case 94 :
        image.append(jjstrLiteralImages[94]);
        lengthOfMatch = jjstrLiteralImages[94].length();
                                              if (parenNesting == 0) SwitchTo(INCDEF); matchedToken.kind=ITEM;
         break;
      case 116 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                      parenNesting++;
         break;
      case 117 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                      parenNesting--;
         break;
      case 186 :
         if (jjmatchedPos == -1)
         {
            if (jjbeenHere[24] &&
                jjemptyLineNo[24] == input_stream.getBeginLine() &&
                jjemptyColNo[24] == input_stream.getBeginColumn())
               throw new TokenMgrError(("Error: Bailing out of infinite loop caused by repeated empty string matches at line " + input_stream.getBeginLine() + ", column " + input_stream.getBeginColumn() + "."), TokenMgrError.LOOP_DETECTED);
            jjemptyLineNo[24] = input_stream.getBeginLine();
            jjemptyColNo[24] = input_stream.getBeginColumn();
            jjbeenHere[24] = true;
         }
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
